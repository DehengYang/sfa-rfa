kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1622, susp=0.5]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1543, susp=0.5]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1537, susp=0.5]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1586, susp=0.3333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1513, susp=0.3333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1508, susp=0.3333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1504, susp=0.3333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1481, susp=0.3333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1098, susp=0.125]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1095, susp=0.125]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1093, susp=0.125]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1084, susp=0.125]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1520, susp=0.1111111111111111]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1478, susp=0.1111111111111111]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{updateSigma(D)V 0.0, lineNumber=1682, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1526, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1458, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1454, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1448, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeShiftIncrement(III)V 0.0, lineNumber=1438, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{dqd(II)V 0.0, lineNumber=1407, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{dqd(II)V 0.0, lineNumber=1402, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{dqd(II)V 0.0, lineNumber=1387, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{dqd(II)V 0.0, lineNumber=1382, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{dqd(II)V 0.0, lineNumber=1342, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{dqd(II)V 0.0, lineNumber=1337, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{dqd(II)V 0.0, lineNumber=1334, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{dqds(II)V 0.0, lineNumber=1278, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{countEigenValues(DII)I 0.0, lineNumber=1234, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{eigenvaluesRange(II)[D 0.0, lineNumber=1209, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{eigenvaluesRange(II)[D 0.0, lineNumber=1202, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{eigenvaluesRange(II)[D 0.0, lineNumber=1187, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{eigenvaluesRange(II)[D 0.0, lineNumber=1180, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{flipIfWarranted(II)Z 0.0, lineNumber=1132, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1080, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1066, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1053, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1052, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1014, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=1005, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{goodStep(II)I 0.0, lineNumber=998, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{initialSplits(I)V 0.0, lineNumber=960, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{initialSplits(I)V 0.0, lineNumber=955, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{initialSplits(I)V 0.0, lineNumber=942, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{processGeneralBlock(I)V 0.0, lineNumber=898, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{processGeneralBlock(I)V 0.0, lineNumber=888, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{processGeneralBlock(I)V 0.0, lineNumber=873, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{processGeneralBlock(I)V 0.0, lineNumber=869, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{processGeneralBlock(I)V 0.0, lineNumber=833, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.EigenDecompositionImpl, methodName=org.apache.commons.math.linear.EigenDecompositionImpl{computeSplits()Ljava/util/List; 0.0, lineNumber=700, susp=0.030303030303030304]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{checkMultiplicationCompatible(Lorg/apache/commons/math/linear/AnyMatrix;Lorg/apache/commons/math/linear/AnyMatrix;)V 0.0, lineNumber=650, susp=0.01098901098901099]
kali-susp:Candidate [className=org.apache.commons.math.linear.Array2DRowRealMatrix, methodName=org.apache.commons.math.linear.Array2DRowRealMatrix{setSubMatrix([[DII)V 0.0, lineNumber=336, susp=0.0058823529411764705]
kali-susp:Candidate [className=org.apache.commons.math.linear.Array2DRowRealMatrix, methodName=org.apache.commons.math.linear.Array2DRowRealMatrix{setSubMatrix([[DII)V 0.0, lineNumber=331, susp=0.0058823529411764705]
kali-susp:Candidate [className=org.apache.commons.math.linear.Array2DRowRealMatrix, methodName=org.apache.commons.math.linear.Array2DRowRealMatrix{setSubMatrix([[DII)V 0.0, lineNumber=326, susp=0.0058823529411764705]
kali-susp:Candidate [className=org.apache.commons.math.linear.Array2DRowRealMatrix, methodName=org.apache.commons.math.linear.Array2DRowRealMatrix{setSubMatrix([[DII)V 0.0, lineNumber=320, susp=0.0058823529411764705]
kali-susp:Candidate [className=org.apache.commons.math.linear.Array2DRowRealMatrix, methodName=org.apache.commons.math.linear.Array2DRowRealMatrix{setSubMatrix([[DII)V 0.0, lineNumber=315, susp=0.0058823529411764705]
kali-susp:Candidate [className=org.apache.commons.math.linear.Array2DRowRealMatrix, methodName=org.apache.commons.math.linear.Array2DRowRealMatrix{setSubMatrix([[DII)V 0.0, lineNumber=314, susp=0.0058823529411764705]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=587, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=584, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=581, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=579, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=577, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{addValue(Ljava/lang/Object;)V 0.0, lineNumber=113, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=413, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=406, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=402, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=395, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=388, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=384, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumPct(Ljava/lang/Comparable;)D 0.0, lineNumber=491, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=381, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getPct(Ljava/lang/Comparable;)D 0.0, lineNumber=316, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{preMultiply([Lorg/apache/commons/math/FieldElement;)[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=729, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{operate([Lorg/apache/commons/math/FieldElement;)[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=677, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.correlation.SpearmansCorrelation, methodName=org.apache.commons.math.stat.correlation.SpearmansCorrelation{correlation([D[D)D 0.0, lineNumber=148, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=107, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=105, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=102, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{setScale(D)V 0.0, lineNumber=129, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.estimation.GaussNewtonEstimator, methodName=org.apache.commons.math.estimation.GaussNewtonEstimator{estimate(Lorg/apache/commons/math/estimation/EstimationProblem;)V 0.0, lineNumber=179, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer, methodName=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer{guessParametersErrors()[D 0.0, lineNumber=303, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl, methodName=org.apache.commons.math.linear.LUDecompositionImpl{getDeterminant()D 0.0, lineNumber=212, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.LUDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=313, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.LUDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=308, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.GLSMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.GLSMultipleLinearRegression{getOmegaInverse()Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=81, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression{validateCovarianceData([[D[[D)V 0.0, lineNumber=114, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression{validateCovarianceData([[D[[D)V 0.0, lineNumber=110, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer$1, methodName=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer$1{compare(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I 0.0, lineNumber=192, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer, methodName=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer{optimize(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair; 0.0, lineNumber=204, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{getSlopeConfidenceInterval(D)D 0.0, lineNumber=549, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{getMeanSquareError()D 0.0, lineNumber=411, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{removeData(DD)V 0.0, lineNumber=170, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{removeData(DD)V 0.0, lineNumber=158, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=339, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=330, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=291, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=289, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=272, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=215, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector{visit(IID)V 0.0, lineNumber=406, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=125, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=122, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{density(Ljava/lang/Double;)D 0.0, lineNumber=75, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{cumulativeProbability(D)D 0.0, lineNumber=98, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{setMean(D)V 0.0, lineNumber=53, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractRealMatrix, methodName=org.apache.commons.math.linear.AbstractRealMatrix{operate(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=705, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=429, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=419, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=399, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=390, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve([D)[D 0.0, lineNumber=370, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve([D)[D 0.0, lineNumber=361, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl{getRank()I 0.0, lineNumber=306, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl{getUT()Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=172, susp=0.0]
