kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.BaseSecantSolver, methodName=org.apache.commons.math.analysis.solvers.BaseSecantSolver{doSolve()D 0.0, lineNumber=187, susp=0.16666666666666666]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.BaseSecantSolver, methodName=org.apache.commons.math.analysis.solvers.BaseSecantSolver{doSolve()D 0.0, lineNumber=235, susp=0.047619047619047616]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.BaseSecantSolver, methodName=org.apache.commons.math.analysis.solvers.BaseSecantSolver{doSolve()D 0.0, lineNumber=204, susp=0.047619047619047616]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.BaseSecantSolver, methodName=org.apache.commons.math.analysis.solvers.BaseSecantSolver{doSolve()D 0.0, lineNumber=171, susp=0.047619047619047616]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.BaseSecantSolver, methodName=org.apache.commons.math.analysis.solvers.BaseSecantSolver{doSolve()D 0.0, lineNumber=166, susp=0.04]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.BaseSecantSolver, methodName=org.apache.commons.math.analysis.solvers.BaseSecantSolver{doSolve()D 0.0, lineNumber=141, susp=0.03225806451612903]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.BaseSecantSolver, methodName=org.apache.commons.math.analysis.solvers.BaseSecantSolver{doSolve()D 0.0, lineNumber=138, susp=0.03225806451612903]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils, methodName=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils{verifyBracketing(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)V 0.0, lineNumber=375, susp=0.02564102564102564]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils, methodName=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils{verifyBracketing(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)V 0.0, lineNumber=371, susp=0.02564102564102564]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils, methodName=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils{isBracketing(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)Z 0.0, lineNumber=305, susp=0.02564102564102564]
kali-susp:Candidate [className=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils, methodName=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils{verifyInterval(DD)V 0.0, lineNumber=336, susp=0.005434782608695652]
kali-susp:Candidate [className=org.apache.commons.math.util.Incrementor, methodName=org.apache.commons.math.util.Incrementor{incrementCount()V 0.0, lineNumber=84, susp=0.003134796238244514]
kali-susp:Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{max(DD)D 0.0, lineNumber=3928, susp=0.001984126984126984]
kali-susp:Candidate [className=org.apache.commons.math.util.FastMath, methodName=org.apache.commons.math.util.FastMath{max(DD)D 0.0, lineNumber=3925, susp=0.0019083969465648854]
kali-susp:Candidate [className=org.apache.commons.math.util.MathUtils, methodName=org.apache.commons.math.util.MathUtils{checkNotNull(Ljava/lang/Object;)V 0.0, lineNumber=2334, susp=0.0017543859649122807]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=505, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=501, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=497, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=494, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=348, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=341, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=337, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=330, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=323, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=318, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumPct(Ljava/lang/Comparable;)D 0.0, lineNumber=408, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=315, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getPct(Ljava/lang/Comparable;)D 0.0, lineNumber=265, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser{getInterpolationPointsForY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint; 0.0, lineNumber=264, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser{getInterpolationPointsForY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint; 0.0, lineNumber=258, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser{interpolateXAtY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;IID)D 0.0, lineNumber=232, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser{interpolateXAtY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;IID)D 0.0, lineNumber=229, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser{interpolateXAtY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;IID)D 0.0, lineNumber=223, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser{findMaxY([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)I 0.0, lineNumber=199, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser{guess()[D 0.0, lineNumber=156, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1{compare(Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)I 0.0, lineNumber=316, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1{compare(Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)I 0.0, lineNumber=313, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1{compare(Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)I 0.0, lineNumber=310, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1{compare(Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)I 0.0, lineNumber=307, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1, methodName=org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser$1{compare(Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)I 0.0, lineNumber=304, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{preMultiply([Lorg/apache/commons/math/FieldElement;)[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=731, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{operate([Lorg/apache/commons/math/FieldElement;)[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=686, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.correlation.SpearmansCorrelation, methodName=org.apache.commons.math.stat.correlation.SpearmansCorrelation{correlation([D[D)D 0.0, lineNumber=152, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.correlation.SpearmansCorrelation, methodName=org.apache.commons.math.stat.correlation.SpearmansCorrelation{correlation([D[D)D 0.0, lineNumber=149, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer, methodName=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer{guessParametersErrors()[D 0.0, lineNumber=215, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl, methodName=org.apache.commons.math.linear.LUDecompositionImpl{getDeterminant()D 0.0, lineNumber=202, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.LUDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=295, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.LUDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=292, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator, methodName=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator{interpolate([D[D[[D)Lorg/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction; 0.0, lineNumber=85, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator, methodName=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator{interpolate([D[D[[D)Lorg/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction; 0.0, lineNumber=77, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator, methodName=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator{interpolate([D[D[[D)Lorg/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction; 0.0, lineNumber=74, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.analysis.interpolation.BicubicSplineFunction, methodName=org.apache.commons.math.analysis.interpolation.BicubicSplineFunction{value(DD)D 0.0, lineNumber=381, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.analysis.interpolation.BicubicSplineFunction, methodName=org.apache.commons.math.analysis.interpolation.BicubicSplineFunction{value(DD)D 0.0, lineNumber=378, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction, methodName=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction{value(DD)D 0.0, lineNumber=164, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction, methodName=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunction{value(DD)D 0.0, lineNumber=160, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.GLSMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.GLSMultipleLinearRegression{getOmegaInverse()Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=80, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createRealVector([D)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=236, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression{validateCovarianceData([[D[[D)V 0.0, lineNumber=236, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression{validateCovarianceData([[D[[D)V 0.0, lineNumber=232, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{getSlopeConfidenceInterval(D)D 0.0, lineNumber=552, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{getMeanSquareError()D 0.0, lineNumber=414, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{removeData(DD)V 0.0, lineNumber=173, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{removeData(DD)V 0.0, lineNumber=161, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=324, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=307, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=302, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=273, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=221, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector{end()D 0.0, lineNumber=403, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector{visit(IID)V 0.0, lineNumber=382, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{density(D)D 0.0, lineNumber=84, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{cumulativeProbability(D)D 0.0, lineNumber=107, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.util.BigReal, methodName=org.apache.commons.math.util.BigReal{equals(Ljava/lang/Object;)Z 0.0, lineNumber=275, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractRealMatrix, methodName=org.apache.commons.math.linear.AbstractRealMatrix{operate(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=656, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl{getUT()Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=480, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.sampling.DummyStepInterpolator, methodName=org.apache.commons.math.ode.sampling.DummyStepInterpolator{readExternal(Ljava/io/ObjectInput;)V 0.0, lineNumber=136, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.sampling.DummyStepInterpolator, methodName=org.apache.commons.math.ode.sampling.DummyStepInterpolator{writeExternal(Ljava/io/ObjectOutput;)V 0.0, lineNumber=117, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.BaseMultiStartMultivariateVectorialOptimizer, methodName=org.apache.commons.math.optimization.BaseMultiStartMultivariateVectorialOptimizer{optimize(ILorg/apache/commons/math/analysis/MultivariateVectorialFunction;[D[D[D)Lorg/apache/commons/math/optimization/VectorialPointValuePair; 0.0, lineNumber=170, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.BaseMultiStartMultivariateVectorialOptimizer, methodName=org.apache.commons.math.optimization.BaseMultiStartMultivariateVectorialOptimizer{getOptima()[Lorg/apache/commons/math/optimization/VectorialPointValuePair; 0.0, lineNumber=115, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.BaseMultiStartMultivariateVectorialOptimizer$1, methodName=org.apache.commons.math.optimization.BaseMultiStartMultivariateVectorialOptimizer$1{compare(Lorg/apache/commons/math/optimization/VectorialPointValuePair;Lorg/apache/commons/math/optimization/VectorialPointValuePair;)I 0.0, lineNumber=191, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.BaseMultiStartMultivariateVectorialOptimizer$1, methodName=org.apache.commons.math.optimization.BaseMultiStartMultivariateVectorialOptimizer$1{compare(Lorg/apache/commons/math/optimization/VectorialPointValuePair;Lorg/apache/commons/math/optimization/VectorialPointValuePair;)I 0.0, lineNumber=189, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{solveLowerTriangularSystem(Lorg/apache/commons/math/linear/RealMatrix;Lorg/apache/commons/math/linear/RealVector;)V 0.0, lineNumber=840, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{solveLowerTriangularSystem(Lorg/apache/commons/math/linear/RealMatrix;Lorg/apache/commons/math/linear/RealVector;)V 0.0, lineNumber=832, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{solveLowerTriangularSystem(Lorg/apache/commons/math/linear/RealMatrix;Lorg/apache/commons/math/linear/RealVector;)V 0.0, lineNumber=827, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createColumnFieldMatrix([Lorg/apache/commons/math/FieldElement;)Lorg/apache/commons/math/linear/FieldMatrix; 0.0, lineNumber=346, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createColumnFieldMatrix([Lorg/apache/commons/math/FieldElement;)Lorg/apache/commons/math/linear/FieldMatrix; 0.0, lineNumber=342, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createRowFieldMatrix([Lorg/apache/commons/math/FieldElement;)Lorg/apache/commons/math/linear/FieldMatrix; 0.0, lineNumber=299, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createRowFieldMatrix([Lorg/apache/commons/math/FieldElement;)Lorg/apache/commons/math/linear/FieldMatrix; 0.0, lineNumber=295, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{solveUpperTriangularSystem(Lorg/apache/commons/math/linear/RealMatrix;Lorg/apache/commons/math/linear/RealVector;)V 0.0, lineNumber=880, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{solveUpperTriangularSystem(Lorg/apache/commons/math/linear/RealMatrix;Lorg/apache/commons/math/linear/RealVector;)V 0.0, lineNumber=872, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{solveUpperTriangularSystem(Lorg/apache/commons/math/linear/RealMatrix;Lorg/apache/commons/math/linear/RealVector;)V 0.0, lineNumber=867, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createFieldMatrix([[Lorg/apache/commons/math/FieldElement;)Lorg/apache/commons/math/linear/FieldMatrix; 0.0, lineNumber=144, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createRowRealMatrix([D)Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=272, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{setWindowSize(I)V 0.0, lineNumber=325, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{setWindowSize(I)V 0.0, lineNumber=336, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{setWindowSize(I)V 0.0, lineNumber=324, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{addValue(D)V 0.0, lineNumber=164, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{addValue(D)V 0.0, lineNumber=162, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.transform.FastCosineTransformer, methodName=org.apache.commons.math.transform.FastCosineTransformer{fct([D)[D 0.0, lineNumber=229, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.transform.FastCosineTransformer, methodName=org.apache.commons.math.transform.FastCosineTransformer{fct([D)[D 0.0, lineNumber=224, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.LeastSquaresConverter, methodName=org.apache.commons.math.optimization.LeastSquaresConverter{value([D)D 0.0, lineNumber=170, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.LeastSquaresConverter, methodName=org.apache.commons.math.optimization.LeastSquaresConverter{value([D)D 0.0, lineNumber=165, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.LeastSquaresConverter, methodName=org.apache.commons.math.optimization.LeastSquaresConverter{value([D)D 0.0, lineNumber=156, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMeadSimplex, methodName=org.apache.commons.math.optimization.direct.NelderMeadSimplex{iterate(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Ljava/util/Comparator;)V 0.0, lineNumber=265, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMeadSimplex, methodName=org.apache.commons.math.optimization.direct.NelderMeadSimplex{iterate(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Ljava/util/Comparator;)V 0.0, lineNumber=251, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMeadSimplex, methodName=org.apache.commons.math.optimization.direct.NelderMeadSimplex{iterate(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Ljava/util/Comparator;)V 0.0, lineNumber=243, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMeadSimplex, methodName=org.apache.commons.math.optimization.direct.NelderMeadSimplex{iterate(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Ljava/util/Comparator;)V 0.0, lineNumber=235, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMeadSimplex, methodName=org.apache.commons.math.optimization.direct.NelderMeadSimplex{iterate(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Ljava/util/Comparator;)V 0.0, lineNumber=226, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMeadSimplex, methodName=org.apache.commons.math.optimization.direct.NelderMeadSimplex{iterate(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Ljava/util/Comparator;)V 0.0, lineNumber=222, susp=0.0]
