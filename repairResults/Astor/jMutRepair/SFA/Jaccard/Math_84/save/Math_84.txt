kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectional, methodName=org.apache.commons.math.optimization.direct.MultiDirectional{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=90, susp=0.5]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectional, methodName=org.apache.commons.math.optimization.direct.MultiDirectional{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=74, susp=0.5]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectional, methodName=org.apache.commons.math.optimization.direct.MultiDirectional{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=79, susp=0.25]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{setStartConfiguration([D)V 0.0, lineNumber=147, susp=0.16666666666666666]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{incrementIterationsCounter()V 0.0, lineNumber=319, susp=0.15384615384615385]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{optimize(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair; 0.0, lineNumber=294, susp=0.15384615384615385]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{evaluateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=395, susp=0.13333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{buildSimplex([D)V 0.0, lineNumber=361, susp=0.13333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{evaluate([D)D 0.0, lineNumber=345, susp=0.13333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{optimize(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair; 0.0, lineNumber=265, susp=0.13333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{optimize(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair; 0.0, lineNumber=299, susp=0.07692307692307693]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=587, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=584, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=581, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=579, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=577, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{addValue(Ljava/lang/Object;)V 0.0, lineNumber=113, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=413, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=406, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=402, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=395, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=388, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=384, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumPct(Ljava/lang/Comparable;)D 0.0, lineNumber=491, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Comparable;)J 0.0, lineNumber=381, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getPct(Ljava/lang/Comparable;)D 0.0, lineNumber=316, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{preMultiply([Lorg/apache/commons/math/FieldElement;)[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=729, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{operate([Lorg/apache/commons/math/FieldElement;)[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=677, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.correlation.SpearmansCorrelation, methodName=org.apache.commons.math.stat.correlation.SpearmansCorrelation{correlation([D[D)D 0.0, lineNumber=148, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=107, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=105, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=102, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{setScale(D)V 0.0, lineNumber=129, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.estimation.GaussNewtonEstimator, methodName=org.apache.commons.math.estimation.GaussNewtonEstimator{estimate(Lorg/apache/commons/math/estimation/EstimationProblem;)V 0.0, lineNumber=179, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer, methodName=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer{guessParametersErrors()[D 0.0, lineNumber=301, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl, methodName=org.apache.commons.math.linear.LUDecompositionImpl{getDeterminant()D 0.0, lineNumber=212, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.LUDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=313, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.LUDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=308, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.GLSMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.GLSMultipleLinearRegression{getOmegaInverse()Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=81, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression{validateCovarianceData([[D[[D)V 0.0, lineNumber=114, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression{validateCovarianceData([[D[[D)V 0.0, lineNumber=110, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer$1, methodName=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer$1{compare(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I 0.0, lineNumber=193, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer, methodName=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizer{optimize(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair; 0.0, lineNumber=205, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{getSlopeConfidenceInterval(D)D 0.0, lineNumber=549, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{getMeanSquareError()D 0.0, lineNumber=411, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{removeData(DD)V 0.0, lineNumber=170, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{removeData(DD)V 0.0, lineNumber=158, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator$Corrector{visit(IID)V 0.0, lineNumber=406, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=339, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=330, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=291, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=289, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=272, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator, methodName=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator{integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D 0.0, lineNumber=215, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=125, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=122, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{density(Ljava/lang/Double;)D 0.0, lineNumber=75, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{cumulativeProbability(D)D 0.0, lineNumber=98, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{setMean(D)V 0.0, lineNumber=53, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractRealMatrix, methodName=org.apache.commons.math.linear.AbstractRealMatrix{operate(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=705, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=430, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=420, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=400, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=391, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve([D)[D 0.0, lineNumber=371, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve([D)[D 0.0, lineNumber=362, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl{getRank()I 0.0, lineNumber=307, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl{getUT()Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=173, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{orthogonalizeMatrix([[DD)[[D 0.0, lineNumber=1001, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=801, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=783, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=774, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=765, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=756, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=747, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=738, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=729, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=720, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=711, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=702, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=693, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=684, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=675, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=666, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=657, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=648, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=639, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=630, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=621, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=612, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=603, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=594, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngle()D 0.0, lineNumber=550, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngle()D 0.0, lineNumber=548, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAxis()Lorg/apache/commons/math/geometry/Vector3D; 0.0, lineNumber=536, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAxis()Lorg/apache/commons/math/geometry/Vector3D; 0.0, lineNumber=534, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.SimpleRealPointChecker, methodName=org.apache.commons.math.optimization.SimpleRealPointChecker{converged(ILorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)Z 0.0, lineNumber=79, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.LeastSquaresConverter, methodName=org.apache.commons.math.optimization.LeastSquaresConverter{value([D)D 0.0, lineNumber=178, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.LeastSquaresConverter, methodName=org.apache.commons.math.optimization.LeastSquaresConverter{value([D)D 0.0, lineNumber=173, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.LeastSquaresConverter, methodName=org.apache.commons.math.optimization.LeastSquaresConverter{value([D)D 0.0, lineNumber=163, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{replaceWorstPoint(Lorg/apache/commons/math/optimization/RealPointValuePair;Ljava/util/Comparator;)V 0.0, lineNumber=413, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=158, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=143, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=134, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=124, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=115, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=109, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizer, methodName=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizer{optimize(Lorg/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction;[D[D[D)Lorg/apache/commons/math/optimization/VectorialPointValuePair; 0.0, lineNumber=227, susp=0.0]
