kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair; 0.0, lineNumber=338, susp=0.1111111111111111]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair; 0.0, lineNumber=336, susp=0.1111111111111111]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{solvePhase1(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V 0.0, lineNumber=176, susp=0.1]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{isOptimal(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z 0.0, lineNumber=150, susp=0.1]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{isOptimal(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z 0.0, lineNumber=146, susp=0.1]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z 0.0, lineNumber=133, susp=0.1]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z 0.0, lineNumber=129, susp=0.1]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{discardArtificialVariables()V 0.0, lineNumber=290, susp=0.09090909090909091]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{solvePhase1(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V 0.0, lineNumber=167, susp=0.09090909090909091]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V 0.0, lineNumber=116, susp=0.09090909090909091]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V 0.0, lineNumber=106, susp=0.09090909090909091]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; 0.0, lineNumber=83, susp=0.09090909090909091]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; 0.0, lineNumber=81, susp=0.09090909090909091]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexSolver, methodName=org.apache.commons.math.optimization.linear.SimplexSolver{getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; 0.0, lineNumber=62, susp=0.09090909090909091]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.AbstractLinearOptimizer, methodName=org.apache.commons.math.optimization.linear.AbstractLinearOptimizer{incrementIterationsCounter()V 0.0, lineNumber=86, susp=0.09090909090909091]
kali-susp:Candidate [className=org.apache.commons.math.util.MathUtils, methodName=org.apache.commons.math.util.MathUtils{compareTo(DDD)I 0.0, lineNumber=369, susp=0.08333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.util.MathUtils, methodName=org.apache.commons.math.util.MathUtils{compareTo(DDD)I 0.0, lineNumber=367, susp=0.08333333333333333]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{createTableau(Z)[[D 0.0, lineNumber=171, susp=0.07692307692307693]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{getBasicRow(I)Ljava/lang/Integer; 0.0, lineNumber=276, susp=0.07142857142857142]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{getBasicRow(I)Ljava/lang/Integer; 0.0, lineNumber=275, susp=0.07142857142857142]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I 0.0, lineNumber=236, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{normalize(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint; 0.0, lineNumber=211, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{createTableau(Z)[[D 0.0, lineNumber=176, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{createTableau(Z)[[D 0.0, lineNumber=169, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{createTableau(Z)[[D 0.0, lineNumber=160, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{createTableau(Z)[[D 0.0, lineNumber=144, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.optimization.linear.SimplexTableau, methodName=org.apache.commons.math.optimization.linear.SimplexTableau{createTableau(Z)[[D 0.0, lineNumber=133, susp=0.06666666666666667]
kali-susp:Candidate [className=org.apache.commons.math.linear.RealVectorImpl, methodName=org.apache.commons.math.linear.RealVectorImpl{checkVectorDimensions(I)V 0.0, lineNumber=1287, susp=0.02631578947368421]
kali-susp:Candidate [className=org.apache.commons.math.linear.RealMatrixImpl, methodName=org.apache.commons.math.linear.RealMatrixImpl{setSubMatrix([[DII)V 0.0, lineNumber=336, susp=0.013157894736842105]
kali-susp:Candidate [className=org.apache.commons.math.linear.RealMatrixImpl, methodName=org.apache.commons.math.linear.RealMatrixImpl{setSubMatrix([[DII)V 0.0, lineNumber=331, susp=0.013157894736842105]
kali-susp:Candidate [className=org.apache.commons.math.linear.RealMatrixImpl, methodName=org.apache.commons.math.linear.RealMatrixImpl{setSubMatrix([[DII)V 0.0, lineNumber=326, susp=0.013157894736842105]
kali-susp:Candidate [className=org.apache.commons.math.linear.RealMatrixImpl, methodName=org.apache.commons.math.linear.RealMatrixImpl{setSubMatrix([[DII)V 0.0, lineNumber=320, susp=0.013157894736842105]
kali-susp:Candidate [className=org.apache.commons.math.linear.RealMatrixImpl, methodName=org.apache.commons.math.linear.RealMatrixImpl{setSubMatrix([[DII)V 0.0, lineNumber=315, susp=0.013157894736842105]
kali-susp:Candidate [className=org.apache.commons.math.linear.RealMatrixImpl, methodName=org.apache.commons.math.linear.RealMatrixImpl{setSubMatrix([[DII)V 0.0, lineNumber=314, susp=0.013157894736842105]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=525, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=522, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=519, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=517, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{equals(Ljava/lang/Object;)Z 0.0, lineNumber=515, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{addValue(Ljava/lang/Object;)V 0.0, lineNumber=112, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Object;)J 0.0, lineNumber=369, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Object;)J 0.0, lineNumber=362, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Object;)J 0.0, lineNumber=358, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Object;)J 0.0, lineNumber=351, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Object;)J 0.0, lineNumber=344, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Object;)J 0.0, lineNumber=340, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumPct(Ljava/lang/Object;)D 0.0, lineNumber=429, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getCumFreq(Ljava/lang/Object;)J 0.0, lineNumber=337, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.Frequency, methodName=org.apache.commons.math.stat.Frequency{getPct(Ljava/lang/Object;)D 0.0, lineNumber=287, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{preMultiply([Lorg/apache/commons/math/FieldElement;)[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=729, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractFieldMatrix, methodName=org.apache.commons.math.linear.AbstractFieldMatrix{operate([Lorg/apache/commons/math/FieldElement;)[Lorg/apache/commons/math/FieldElement; 0.0, lineNumber=677, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.correlation.SpearmansCorrelation, methodName=org.apache.commons.math.stat.correlation.SpearmansCorrelation{correlation([D[D)D 0.0, lineNumber=148, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=107, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=105, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=102, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.CauchyDistributionImpl, methodName=org.apache.commons.math.distribution.CauchyDistributionImpl{setScale(D)V 0.0, lineNumber=129, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.estimation.GaussNewtonEstimator, methodName=org.apache.commons.math.estimation.GaussNewtonEstimator{estimate(Lorg/apache/commons/math/estimation/EstimationProblem;)V 0.0, lineNumber=179, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer, methodName=org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer{guessParametersErrors()[D 0.0, lineNumber=287, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl, methodName=org.apache.commons.math.linear.LUDecompositionImpl{getDeterminant()D 0.0, lineNumber=212, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.LUDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=313, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.LUDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.LUDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=308, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.GLSMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.GLSMultipleLinearRegression{getOmegaInverse()Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=81, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression{validateCovarianceData([[D[[D)V 0.0, lineNumber=110, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression, methodName=org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression{validateCovarianceData([[D[[D)V 0.0, lineNumber=106, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{getSlopeConfidenceInterval(D)D 0.0, lineNumber=549, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{getMeanSquareError()D 0.0, lineNumber=411, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{removeData(DD)V 0.0, lineNumber=170, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.regression.SimpleRegression, methodName=org.apache.commons.math.stat.regression.SimpleRegression{removeData(DD)V 0.0, lineNumber=158, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=125, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{inverseCumulativeProbability(D)D 0.0, lineNumber=122, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{density(Ljava/lang/Double;)D 0.0, lineNumber=75, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{cumulativeProbability(D)D 0.0, lineNumber=98, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.distribution.ExponentialDistributionImpl, methodName=org.apache.commons.math.distribution.ExponentialDistributionImpl{setMean(D)V 0.0, lineNumber=53, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.AbstractRealMatrix, methodName=org.apache.commons.math.linear.AbstractRealMatrix{operate(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=705, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=401, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=391, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=371, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/RealVector; 0.0, lineNumber=362, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve([D)[D 0.0, lineNumber=342, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver{solve([D)[D 0.0, lineNumber=333, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl{getRank()I 0.0, lineNumber=278, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.SingularValueDecompositionImpl, methodName=org.apache.commons.math.linear.SingularValueDecompositionImpl{getUT()Lorg/apache/commons/math/linear/RealMatrix; 0.0, lineNumber=173, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{orthogonalizeMatrix([[DD)[[D 0.0, lineNumber=1001, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=801, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=783, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=774, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=765, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=756, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=747, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=738, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=729, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=720, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=711, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=702, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=693, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=684, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=675, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=666, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=657, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=648, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=639, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=630, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=621, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=612, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=603, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngles(Lorg/apache/commons/math/geometry/RotationOrder;)[D 0.0, lineNumber=594, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngle()D 0.0, lineNumber=550, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAngle()D 0.0, lineNumber=548, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAxis()Lorg/apache/commons/math/geometry/Vector3D; 0.0, lineNumber=536, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.geometry.Rotation, methodName=org.apache.commons.math.geometry.Rotation{getAxis()Lorg/apache/commons/math/geometry/Vector3D; 0.0, lineNumber=534, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.DirectSearchOptimizer, methodName=org.apache.commons.math.optimization.direct.DirectSearchOptimizer{replaceWorstPoint(Lorg/apache/commons/math/optimization/RealPointValuePair;Ljava/util/Comparator;)V 0.0, lineNumber=418, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=166, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=151, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=142, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=132, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=123, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.optimization.direct.NelderMead, methodName=org.apache.commons.math.optimization.direct.NelderMead{iterateSimplex(Ljava/util/Comparator;)V 0.0, lineNumber=117, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createColumnFieldMatrix([Lorg/apache/commons/math/FieldElement;)Lorg/apache/commons/math/linear/FieldMatrix; 0.0, lineNumber=430, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.linear.MatrixUtils, methodName=org.apache.commons.math.linear.MatrixUtils{createRowFieldMatrix([Lorg/apache/commons/math/FieldElement;)Lorg/apache/commons/math/linear/FieldMatrix; 0.0, lineNumber=331, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{setWindowSize(I)V 0.0, lineNumber=315, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{setWindowSize(I)V 0.0, lineNumber=304, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{setWindowSize(I)V 0.0, lineNumber=303, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{addValue(D)V 0.0, lineNumber=143, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{addValue(D)V 0.0, lineNumber=141, susp=0.0]
kali-susp:Candidate [className=org.apache.commons.math.stat.descriptive.DescriptiveStatistics, methodName=org.apache.commons.math.stat.descriptive.DescriptiveStatistics{getPercentile(D)D 0.0, lineNumber=376, susp=0.0]
